-------------简化版本---------------------

App壳--->面向用户画面
|
|
|
业务模块--->业务模块1，业务模块2，模块3，模块4.....
|
|
|
通用层 --->工具类，常量标识
|
|
|
核心层 ---> 网络请求，缓存，下载上传，封装库等

1.接口隔离原则
2.什么时候使用建造者模式？
答：参数非常多，构造方法入参太多的情况。

3.链式调用是一种方式，建造者是一种模式，两者没有关系。

4.数据总线--事件的发起者-->事件接收者 --rx/databus包

---------------------------------
MVC管理麻烦，代码臃肿，层次不清晰

MVVM 双向绑定 （耗费性能） 应用场景-数据资源加载更新很频繁

MVP 接口繁多（DataBus）弥补MVP不足

Dagger2 -优化P层与V层之间的关联关系。
